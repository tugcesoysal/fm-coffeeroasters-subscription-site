{"ast":null,"code":"var _jsxFileName = \"/Users/zeyneptugcesoysal/Downloads/coffeeroasters-subscription-site/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { questions } from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [openQuestions, setOpenQuestions] = useState([true, false, false, false, false]);\n  const [selectedOptions, setSelectedOptions] = useState(new Array(questions.length).fill(null));\n  const toggleQuestion = index => {\n    setOpenQuestions(prevState => {\n      const newOpenState = [...prevState];\n      if (index === 3 && selectedOptions[0] === 0) {\n        return prevState;\n      }\n      newOpenState[index] = !newOpenState[index];\n      return newOpenState;\n    });\n  };\n  const handleOptionSelect = (questionIndex, optionIndex) => {\n    setSelectedOptions(prevState => {\n      const newSelectedOptions = [...prevState];\n      newSelectedOptions[questionIndex] = optionIndex;\n      return newSelectedOptions;\n    });\n    if (questionIndex === 0 && optionIndex === 0) {\n      setOpenQuestions(prevState => {\n        const newOpenState = [...prevState];\n        newOpenState[3] = false;\n        return newOpenState;\n      });\n      setSelectedOptions(prevState => {\n        const newSelectedOptions = [...prevState];\n        newSelectedOptions[3] = null;\n        return newSelectedOptions;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"form-headers-list\",\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: openQuestions[index] ? \"active\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `0${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), question.header]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `question ${selectedOptions[0] === 0 && questionIndex === 3 ? \"disabled\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => toggleQuestion(questionIndex),\n          children: [question.title, /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: openQuestions[questionIndex] ? \"opened-icon\" : \"\",\n            width: \"19\",\n            height: \"13\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M15.949.586l2.828 2.828-9.096 9.096L.586 3.414 3.414.586l6.267 6.267z\",\n              fill: \"#0E8784\",\n              fillRule: \"nonzero\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), openQuestions[questionIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option-card ${selectedOptions[questionIndex] === optionIndex ? \"selected\" : \"\"}`,\n            onClick: () => handleOptionSelect(questionIndex, optionIndex),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: option.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: option.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, questionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Order Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\u201CI drink my coffee\", \" \", selectedOptions[0] === \"Capsule\" ? \"using\" : \"as\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedOptions[0] !== null ? questions[0].options[selectedOptions[0]].title : \" _____ \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), \", with a\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedOptions[1] !== null ? questions[1].options[selectedOptions[1]].title : \" _____ \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), \" \", \"type of bean.\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedOptions[2] !== null ? questions[2].options[selectedOptions[2]].title : \" _____ \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), \" \", \", sent to me\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedOptions[4] !== null ? questions[4].options[selectedOptions[4]].title : \" _____ \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), \".\\u201D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subscribe__button\",\n        disabled: true,\n        children: \"Create my plan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"llpc2H5FltqoOZbYYkpZMKdfILQ=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","questions","jsxDEV","_jsxDEV","Form","_s","openQuestions","setOpenQuestions","selectedOptions","setSelectedOptions","Array","length","fill","toggleQuestion","index","prevState","newOpenState","handleOptionSelect","questionIndex","optionIndex","newSelectedOptions","className","children","map","question","fileName","_jsxFileName","lineNumber","columnNumber","header","onClick","title","width","height","xmlns","d","fillRule","options","option","description","disabled","_c","$RefreshReg$"],"sources":["/Users/zeyneptugcesoysal/Downloads/coffeeroasters-subscription-site/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { questions } from \"./Questions\";\n\nconst Form = () => {\n  const [openQuestions, setOpenQuestions] = useState([\n    true,\n    false,\n    false,\n    false,\n    false,\n  ]);\n\n  const [selectedOptions, setSelectedOptions] = useState(\n    new Array(questions.length).fill(null),\n  );\n\n  const toggleQuestion = (index) => {\n    setOpenQuestions((prevState) => {\n      const newOpenState = [...prevState];\n\n      if (index === 3 && selectedOptions[0] === 0) {\n        return prevState;\n      }\n      newOpenState[index] = !newOpenState[index];\n      return newOpenState;\n    });\n  };\n\n  const handleOptionSelect = (questionIndex, optionIndex) => {\n    setSelectedOptions((prevState) => {\n      const newSelectedOptions = [...prevState];\n      newSelectedOptions[questionIndex] = optionIndex;\n      return newSelectedOptions;\n    });\n\n    if (questionIndex === 0 && optionIndex === 0) {\n      setOpenQuestions((prevState) => {\n        const newOpenState = [...prevState];\n        newOpenState[3] = false;\n        return newOpenState;\n      });\n      setSelectedOptions((prevState) => {\n        const newSelectedOptions = [...prevState];\n        newSelectedOptions[3] = null;\n        return newSelectedOptions;\n      });\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <ul className=\"form-headers-list\">\n        {questions.map((question, index) => (\n          <li key={index} className={openQuestions[index] ? \"active\" : \"\"}>\n            <span>{`0${index + 1}`}</span>\n            {question.header}\n          </li>\n        ))}\n      </ul>\n      <div className=\"form-content\">\n        {questions.map((question, questionIndex) => (\n          <div\n            key={questionIndex}\n            className={`question ${\n              selectedOptions[0] === 0 && questionIndex === 3 ? \"disabled\" : \"\"\n            }`}\n          >\n            <h2 onClick={() => toggleQuestion(questionIndex)}>\n              {question.title}\n              <svg\n                className={openQuestions[questionIndex] ? \"opened-icon\" : \"\"}\n                width=\"19\"\n                height=\"13\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M15.949.586l2.828 2.828-9.096 9.096L.586 3.414 3.414.586l6.267 6.267z\"\n                  fill=\"#0E8784\"\n                  fillRule=\"nonzero\"\n                />\n              </svg>\n            </h2>\n            {openQuestions[questionIndex] && (\n              <div className=\"options\">\n                {question.options.map((option, optionIndex) => (\n                  <div\n                    key={optionIndex}\n                    className={`option-card ${\n                      selectedOptions[questionIndex] === optionIndex\n                        ? \"selected\"\n                        : \"\"\n                    }`}\n                    onClick={() =>\n                      handleOptionSelect(questionIndex, optionIndex)\n                    }\n                  >\n                    <h4>{option.title}</h4>\n                    <p>{option.description}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n        <div className=\"order-summary\">\n          <p>Order Summary</p>\n          <h4>\n            “I drink my coffee{\" \"}\n            {selectedOptions[0] === \"Capsule\" ? \"using\" : \"as\"}{\" \"}\n            <span>\n              {selectedOptions[0] !== null\n                ? questions[0].options[selectedOptions[0]].title\n                : \" _____ \"}\n            </span>\n            , with a{\" \"}\n            <span>\n              {selectedOptions[1] !== null\n                ? questions[1].options[selectedOptions[1]].title\n                : \" _____ \"}\n            </span>{\" \"}\n            type of bean.{\" \"}\n            <span>\n              {selectedOptions[2] !== null\n                ? questions[2].options[selectedOptions[2]].title\n                : \" _____ \"}\n            </span>{\" \"}\n            , sent to me{\" \"}\n            <span>\n              {selectedOptions[4] !== null\n                ? questions[4].options[selectedOptions[4]].title\n                : \" _____ \"}\n            </span>\n            .”\n          </h4>\n        </div>\n        <button className=\"subscribe__button\" disabled>\n          Create my plan!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}